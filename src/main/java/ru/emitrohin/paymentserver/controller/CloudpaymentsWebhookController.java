package ru.emitrohin.paymentserver.controller;

import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;
import ru.emitrohin.paymentserver.client.BotMotherClient;
import ru.emitrohin.paymentserver.client.TelegramBotClient;
import ru.emitrohin.paymentserver.dto.cloudpayments.CloudpaymentsPaymentStatusCode;
import ru.emitrohin.paymentserver.dto.cloudpayments.CloudpaymentsRequest;
import ru.emitrohin.paymentserver.dto.mapper.TransactionMapper;
import ru.emitrohin.paymentserver.model.SubscriptionStatus;
import ru.emitrohin.paymentserver.service.SubscriptionService;
import ru.emitrohin.paymentserver.service.TransactionService;

@RestController
@RequiredArgsConstructor
//TODO change to api
//TODO client retries and error handling
public class CloudpaymentsWebhookController {

    private final TelegramBotClient telegramBotClient;

    private final BotMotherClient botMotherClient;

    private final TransactionService transactionService;

    private final SubscriptionService subscriptionService;

    private final TransactionMapper mapper;

    //TODO check webhook –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ accountId
    @PostMapping( "/cloudpayments/success")
    public CloudpaymentsPaymentStatusCode successWebhook(@Valid CloudpaymentsRequest request) {
        var entity = mapper.createFromRequest(request);
        transactionService.save(entity);

        subscriptionService.createOrUpdateCurrentSubscriptionStatus(request.getAccountId(), SubscriptionStatus.PAID);

        //TODO –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–∏—Å–∞—Ç—å —Å–µ–±–µ
        telegramBotClient.sendMessageWithButtons("–¢–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–∞! üéâ\n\n–í–æ—Ç —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ç–≤–æ–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ \uD83D\uDC47", request.getAccountId());

        botMotherClient.sendPayload(request.getAccountId());

        return CloudpaymentsPaymentStatusCode.OK;
    }

    @PostMapping( "/cloudpayments/fail")
    public CloudpaymentsPaymentStatusCode failWebhook(@Valid CloudpaymentsRequest request) {
        var entity = mapper.createFromRequest(request);
        transactionService.save(entity);

        //TODO –≤—ã—Å–ª–∞—Ç—å –≤ –±–æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π

        return CloudpaymentsPaymentStatusCode.OK;
    }
}
